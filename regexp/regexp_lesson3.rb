# text = "私の誕生日は1997年7月17日です。"
# m = /(\d+)年(\d+)月(\d+)日/.match(text)

# p m

# text = '私の誕生日は1997年7月17日です。'
# if m = /(\d+)年(\d+)月(\d+)日/.match(text)
#   p m
# else
#   puts "マッチしませんでした"
# end

# text = '私の誕生部は1977年7月17日です。'
# m = /(\d+)年(\d+)月(\d+)日/.match(text)
# puts m[0]
# puts m[1]
# puts m[2]
# puts m[3]
# p m[1..3]

# text = '私の誕生日は1997年7月17日です。'
# m = text.match(/(\d+)年(\d+)月(\d+)日/)
# p m

# text = "私の誕生日は1997年7月17日です。"
# m = /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/.match(text)
# p m[:year]
# p m[:month]
# p m[:day]

# text = '私の誕生日は1977年7月17日です。'
# #キャプチャの名前がそのままローカル変数に割り当てられる
# if /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/ =~ text
#   puts "#{year}/#{month}/#{day}"
# end

# p '123 456 789'.scan(/\d+/)

# p '1977年7月17日 2016年12月31日'.scan(/(\d+)年(\d+)月(\d+)日/)

# p '1977年7月17日 2016年12月31日'.scan(/(?:\d+)年(?:\d+)月(?:\d+)日/)

# text = '郵便番号は123-4567です'
# p text[/\d{3}-\d{4}/]

# text = "私の誕生日は1997年7月17日です。"
# p text[/(\d+)年(\d+)月(\d+)日/, 3]

# text = "誕生日は1977年7月17日です。"
# # シンボルでキャプチャの名前を指定する
# p text[/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, :day]

# text = "郵便番号は123-4567です"
# p text.slice(/\d{3}-\d{4}/)

# text = "私の誕生日は1997年7月17日です。"
# p text.slice(/(\d+)年(\d+)月(\d+)日/, 3)

# text = '123,456-789'
# # 文字列で区切り文字を指定する
# p text.split(',')

# #=> ["123", "456-789"]

# #正規表現を使ってカンマ、またはハイフンを区切り文字にする
# p text.split(/,|-/)

# #=> ["123", "456", "789"]

# text = '123,456-789'
# #第1引数に文字列を渡すと、完全に一致した文字列を第2引数で置き換える
# p text.gsub(',', ':')

# #=> "123:456-789"

# #正規表現を渡すと、マッチした部分を第2引数に置き換える
# p text.gsub(/,|-/, ':')

# %=> "123:456:789"

# text = "誕生日は1977年7月17日です"
# p text.gsub(/(\d+)年(\d+)月(\d+)日/, '\1-\2-\3')

# text = '誕生日は1977年7月17日です'
# p text.gsub(
#   /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/,
#   '\k<year>-\k<month>-\k<day>'
# )

# text = '123,456-789'
# #カンマはコロンに、ハイフンはスラッシュに置き換える
# hash = {',' => ':', '-' => '/'}
# p text.gsub(/,|-/, hash)

# text = '123,456-789'
# # カンマはコロンに、それ以外はスラッシュに置き換える
# p text.gsub(/,|-/) { |matched| matched == ',' ? ':' : '/'}

text = '123,456-789'
p text.gsub!(/,|-/, ':')
p text